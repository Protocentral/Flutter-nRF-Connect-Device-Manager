syntax = "proto3";
// package no.nordicsemi.android.mcumgr_flutter.gen;
option java_package = "no.nordicsemi.android.mcumgr_flutter.gen";

// Flutter call arguments
message ProtoUpdateCallArgument {
    string device_uuid = 1;
    optional bytes hash = 2;
    bytes firmware_data = 3;
    ProtoFirmwareUpgradeConfiguration configuration = 4;
}

message ProtoError {
    string localizedDescription = 1;
}

message ProtoImage {
    int32 image = 1;
    optional int32 slot = 2;
    optional bytes hash = 3;
    bytes data = 4;
}

message ProtoUpdateWithImageCallArguments {
    string device_uuid = 1;
    repeated ProtoImage images = 2;
    ProtoFirmwareUpgradeConfiguration configuration = 3;
}

// STATE
message ProtoUpdateStateChangesStreamArg {
    string uuid = 1;
    bool done = 2;
    ProtoError error = 3;
    ProtoUpdateStateChanges updateStateChanges = 4;
}

message ProtoUpdateStateChanges {
    enum FirmwareUpgradeState {
        NONE = 0;
        VALIDATE = 1;
        UPLOAD = 2;
        TEST = 3;
        RESET = 4;
        CONFIRM = 5;
        SUCCESS = 6;
        REQUEST_MCU_MGR_PARAMETERS = 7;
        ERASE_APP_SETTINGS = 8;
        BOOTLOADER_INFO = 9;
    }

    FirmwareUpgradeState oldState = 1;
    FirmwareUpgradeState newState = 2;
    bool canceled = 3;
}

message ProtoFirmwareUpgradeConfiguration {
    enum ImageUploadAlignment {
        DISABLED = 0;
        TWO_BYTE = 1;
        FOUR_BYTE = 2;
        EIGHT_BYTE = 3;
        SIXTEEN_BYTE = 4;
    }

    enum FirmwareUpgradeMode {
        TEST_ONLY = 0;
        CONFIRM_ONLY = 1;
        TEST_AND_CONFIRM = 2;
        UPLOAD_ONLY = 3;
    }

    
    int64 estimatedSwapTimeMs = 1;
    bool eraseAppSettings = 2;
    int64 pipelineDepth = 3;
    ImageUploadAlignment byteAlignment = 4;
    uint64 reassemblyBufferSize = 5;
    FirmwareUpgradeMode firmwareUpgradeMode = 6;
}

message ProtoProgressUpdateStreamArg {
    string uuid = 1;
    bool done = 2;
    ProtoError error = 3;
    ProtoProgressUpdate progressUpdate = 4;
}

message ProtoProgressUpdate {
    uint64 bytesSent = 1;
    uint64 imageSize = 2;
    double timestamp = 3;
}

// LOGS
message ProtoLogMessageStreamArg {
    string uuid = 1;
    bool done = 2;
    ProtoError error = 3;
    optional ProtoLogMessage protoLogMessage = 4;
}

message ProtoLogMessage {
    enum LogCategory {
        TRANSPORT = 0;
        CONFIG = 1;
        CRASH = 2;
        DEFAULT = 3;
        FS = 4;
        IMAGE = 5;
        LOG = 6;
        RUN_TEST = 7;
        STATS = 8;
        DFU = 9;
    }

    enum LogLevel {
        DEBUG = 0;
        VERBOSE = 1;
        INFO = 2;
        APPLICATION = 3;
        WARNING = 4;
        ERROR = 5;
    }

    string message = 1;
    LogCategory logCategory = 2;
    LogLevel logLevel = 3;
    int64 logDateTime = 4;
}

message ProtoReadLogCallArguments {
    string uuid = 1;
    bool clearLogs = 2;
}

message ProtoReadMessagesResponse {
    string uuid = 1;
    repeated ProtoLogMessage protoLogMessage = 2;
}

// IMAGE MANAGER
message ProtoListImagesResponse {
    string uuid = 1;
    bool existing = 2;
    repeated ProtoImageSlot images = 3;
}

message ProtoImageSlot {
    uint64 image = 1;
    uint64 slot = 2;
    optional string version = 3;
    bytes hash = 4;
    bool bootable = 5;
    bool pending = 6;
    bool confirmed = 7;
    bool active = 8;
    bool permanent = 9;
}

// FILE SYSTEM (FS) MANAGER
message ProtoFsEntry {
    string name = 1;
    uint64 size = 2;
    bool dir = 3;
    int32 mode = 4;
    uint64 mtime = 5; // milliseconds since epoch
}

message ProtoFsListResponse {
    string uuid = 1;
    repeated ProtoFsEntry files = 2;
    bool success = 3;
    optional ProtoError error = 4;
}

message ProtoFsStatRequest {
    string uuid = 1;
    string path = 2;
}

message ProtoFsStatResponse {
    string uuid = 1;
    optional ProtoFsEntry stats = 2;
    bool success = 3;
    optional ProtoError error = 4;
}

message ProtoFsRemoveRequest {
    string uuid = 1;
    string path = 2;
}

message ProtoFsRemoveResponse {
    string uuid = 1;
    bool success = 2;
    optional ProtoError error = 3;
}

message ProtoFsOpenRequest {
    string uuid = 1;
    string path = 2;
    int32 flags = 3;
}

message ProtoFsOpenResponse {
    string uuid = 1;
    int32 fd = 2;
    bool success = 3;
    optional ProtoError error = 4;
}

message ProtoFsReadRequest {
    string uuid = 1;
    int32 fd = 2;
    uint64 offset = 3;
    uint64 length = 4;
}

message ProtoFsReadResponse {
    string uuid = 1;
    bytes data = 2;
    bool done = 3;
    bool success = 4;
    optional ProtoError error = 5;
}

message ProtoFsCloseRequest {
    string uuid = 1;
    int32 fd = 2;
}

message ProtoFsCloseResponse {
    string uuid = 1;
    bool success = 2;
    optional ProtoError error = 3;
}

message ProtoFsWriteRequest {
    string uuid = 1;
    int32 fd = 2;
    bytes data = 3;
    uint64 offset = 4;
}

message ProtoFsWriteResponse {
    string uuid = 1;
    uint64 written = 2;
    bool success = 3;
    optional ProtoError error = 4;
}